# Generated by Django 4.1.3 on 2023-01-22 18:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("manager", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="cryptocurrency",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cryptocurrencies",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="cash",
            name="currency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="cash",
                to="manager.currency",
            ),
        ),
        migrations.AddField(
            model_name="cash",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cash",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="card",
            name="currency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="cards",
                to="manager.currency",
            ),
        ),
        migrations.AddField(
            model_name="card",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cards",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="accountancy",
            name="card",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="accountancy",
                to="manager.card",
            ),
        ),
        migrations.AddField(
            model_name="accountancy",
            name="cash",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="accountancy",
                to="manager.cash",
            ),
        ),
        migrations.AddField(
            model_name="accountancy",
            name="cryptocurrency",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="accountancy",
                to="manager.cryptocurrency",
            ),
        ),
        migrations.AddConstraint(
            model_name="cryptocurrency",
            constraint=models.UniqueConstraint(
                fields=("user", "name"), name="unique_user_cryptocurrencies"
            ),
        ),
        migrations.AddConstraint(
            model_name="cryptocurrency",
            constraint=models.CheckConstraint(
                check=models.Q(("balance__gte", 0)),
                name="positive_cryptocurrency_balance",
            ),
        ),
        migrations.AddConstraint(
            model_name="cash",
            constraint=models.UniqueConstraint(
                fields=("user", "currency"), name="unique_user_cash"
            ),
        ),
        migrations.AddConstraint(
            model_name="cash",
            constraint=models.CheckConstraint(
                check=models.Q(("balance__gte", 0)), name="positive_cash_balance"
            ),
        ),
        migrations.AddConstraint(
            model_name="card",
            constraint=models.UniqueConstraint(
                fields=("user", "bank_name", "type"), name="unique_user_cards"
            ),
        ),
        migrations.AddConstraint(
            model_name="card",
            constraint=models.CheckConstraint(
                check=models.Q(("balance__gte", 0)), name="positive_card_balance"
            ),
        ),
        migrations.AddConstraint(
            model_name="accountancy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("card__isnull", False),
                        ("cash__isnull", True),
                        ("cryptocurrency__isnull", True),
                    ),
                    models.Q(
                        ("card__isnull", True),
                        ("cash__isnull", False),
                        ("cryptocurrency__isnull", True),
                    ),
                    models.Q(
                        ("card__isnull", True),
                        ("cash__isnull", True),
                        ("cryptocurrency__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="only_one_wallet",
            ),
        ),
        migrations.AddConstraint(
            model_name="accountancy",
            constraint=models.CheckConstraint(
                check=models.Q(("amount__gte", 0)), name="positive_amount"
            ),
        ),
    ]
